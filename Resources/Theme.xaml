<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:PresentationOptions="http://schemas.microsoft.com/winfx/2006/xaml/presentation/options"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!-- Style for the window border -->
    <Style x:Key="windowBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="White"/>
        <Setter Property="Background" Value="#002b2b"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="7"/>
        <Setter Property="Margin" Value="10"/>
        <Setter Property="Effect">
            <Setter.Value>
                <DropShadowEffect ShadowDepth="2" BlurRadius="8" Color="Black" Opacity="0.5"/>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Hide the Windows window border -->
    <Style TargetType="Window" x:Key="window">
        <Setter Property="WindowStyle" Value="None"/>
        <Setter Property="AllowsTransparency" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
    </Style>

    <!-- Style for the window title bar (Without the gradient) -->
    <Style x:Key="titleBar" TargetType="Border">
        <Setter Property="Background" Value="#FF5e5a93" />
        <Setter Property="CornerRadius" Value="6.5 6.5 0 0"/>
        <Setter Property="Height" Value="38" />
        <Setter Property="VerticalAlignment" Value="Top" />
    </Style>


    <!-- Style the window title -->
    <Style x:Key="windowTitleText" TargetType="TextBlock">
        <Setter Property="FontFamily" Value="{StaticResource EncodeSansCondensedBold}" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Padding" Value="0,7.5,0,0" />
        <Setter Property="TextAlignment" Value="Center" />
    </Style>

    <!-- Normal Button-->
    <Style TargetType="{x:Type Button}" PresentationOptions:Freeze="True">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="5" />
            </Style>
        </Style.Resources>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Background" Value="#FF00a3ae" />
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Margin" Value="0,0,5,0" />
        <Setter Property="Height" Value="34" />
        <Setter Property="Cursor" Value="Hand" />

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF00737b" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect ShadowDepth="1" BlurRadius="2" Color="Black" Opacity="0.5"/>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="#FF005156" />
                <Setter Property="Foreground" Value="White" />
                <Setter Property="Effect">
                    <Setter.Value>
                        <DropShadowEffect ShadowDepth="1" BlurRadius="5" Color="Black" Opacity="0.5"/>
                    </Setter.Value>
                </Setter>
            </Trigger>

        </Style.Triggers>
    </Style>

    <!-- Window title bar button styles -->
    <Style TargetType="Button" x:Key="WindowButton" PresentationOptions:Freeze="True">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="6" />
                <Setter Property="BorderBrush" Value="#00FFFFFF" />
                <Setter Property="BorderThickness" Value="1" />
            </Style>
        </Style.Resources>
        <Setter Property="Width" Value="24" />
        <Setter Property="Height" Value="24" />
        <Setter Property="FontSize" Value="12" />
        <Setter Property="Foreground" Value="#7F000000" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Margin" Value="0,7,7,0" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="BorderBrush" Value="#7F000000" />
        <Setter Property="BorderThickness" Value="2" />
        <Setter Property="Background" Value="#FF5e5a93" />

        <!-- Set default template to edit the background -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            
            <!-- Change Background, when mouse is over -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FF00595F" />
                <Setter Property="Foreground" Value="Black" />
            </Trigger>
            
            <!-- Change Background, when button is pressed -->
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="#FF003C40" />
                <Setter Property="Foreground" Value="White" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Close window button -->
    <Style TargetType="Button" x:Key="closeWindowButton" BasedOn="{StaticResource WindowButton}" PresentationOptions:Freeze="True">
        <Setter Property="Content" Value="🗙" />
        <Setter Property="VerticalAlignment" Value="Top" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="Margin" Value="0,7,7,0" />

        <!-- Set default template to edit the background -->
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>

            <!-- Change Background, when mouse is over -->
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Red" />
            </Trigger>
            
            <!-- Change Background, when button is pressed -->
            <Trigger Property="IsMouseCaptured" Value="True">
                <Setter Property="Background" Value="DarkRed" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <!-- ManagementViewItem border -->
    <Style TargetType="Border" x:Key="ManagementViewItemBorder" PresentationOptions:Freeze="True">
        <Setter Property="Background" Value="#22FFFFFF" />
    </Style>
    
    <!-- TextBox -->
    <Style TargetType="TextBox">
        <Style.Resources>
            <Style TargetType="Border">
                <Setter Property="CornerRadius" Value="4" />
            </Style>
        </Style.Resources>
        <Setter Property="BorderBrush">
            <Setter.Value>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#19FFFFFF" Offset="0"/>
                    <GradientStop Color="#19FFFFFF" Offset="0.755"/>
                    <GradientStop Color="Black" Offset="0.756"/>
                    <GradientStop Color="Black" Offset="1"/>
                </LinearGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="2"/>
        <Setter Property="Background" Value="#33767676"/>
        
    </Style>


</ResourceDictionary>